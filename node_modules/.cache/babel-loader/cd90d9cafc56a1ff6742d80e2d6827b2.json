{"ast":null,"code":"var _jsxFileName = \"/home/priyanshu/thefeynmanschool.com/src/components/Addimage.js\";\nimport React, { useState } from 'react';\nimport './Addtext.css';\nimport './Addimage.css';\nimport firebase from 'firebase';\nconst storage = firebase.storage();\n\nconst Addimage = () => {\n  const allInputs = {\n    imgUrl: ''\n  };\n  const [selectedFile, setselectedFile] = useState(null);\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n\n  const fileuploadhandler = event => {\n    setselectedFile(event.target.files[0]);\n    const node = document.getElementById('preview');\n    node.innerHTML = \"\";\n    event.stopPropagation();\n    event.preventDefault();\n    console.log(selectedFile);\n    handleFiles(event.target.files[0]);\n  };\n\n  const onClickHandler = () => {\n    console.log(selectedFile);\n\n    if (selectedFile === '') {\n      console.error(`not an image, the image file is a ${typeof imageAsFile}`);\n    }\n\n    const uploadTask = storage.ref(`/images/${selectedFile.name}`).put(selectedFile); //initiates the firebase side uploading \n\n    uploadTask.on('state_changed', snapShot => {\n      //takes a snap shot of the process as it is happening\n      console.log(snapShot);\n    }, err => {\n      //catches the errors\n      console.log(err);\n    }, () => {\n      // gets the functions from storage refences the image storage in firebase by the children\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\n      storage.ref('images').child(selectedFile.name).getDownloadURL().then(fireBaseUrl => {\n        setImageAsUrl(prevObject => ({ ...prevObject,\n          imgUrl: fireBaseUrl\n        }));\n      });\n    });\n  };\n\n  const handleFiles = file => {\n    const preview = document.getElementById(\"preview\");\n    const img = document.createElement(\"img\");\n    img.classList.add(\"obj\");\n    img.classList.add(\"mt-3\");\n    img.file = file;\n    preview.appendChild(img); // Assuming that \"preview\" is the div output where the content will be displayed.\n\n    const reader = new FileReader();\n\n    reader.onload = function (aImg) {\n      return function (e) {\n        aImg.src = e.target.result;\n      };\n    }(img);\n\n    if (file && file.type.match('image.*')) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    id: \"parents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    action: \"#\",\n    id: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group files color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Upload Your File \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    multiple: \"\",\n    onChange: fileuploadhandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-warning btn-block \",\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Addimage;","map":{"version":3,"sources":["/home/priyanshu/thefeynmanschool.com/src/components/Addimage.js"],"names":["React","useState","firebase","storage","Addimage","allInputs","imgUrl","selectedFile","setselectedFile","imageAsUrl","setImageAsUrl","fileuploadhandler","event","target","files","node","document","getElementById","innerHTML","stopPropagation","preventDefault","console","log","handleFiles","onClickHandler","error","imageAsFile","uploadTask","ref","name","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","prevObject","file","preview","img","createElement","classList","add","appendChild","reader","FileReader","onload","aImg","e","src","result","type","match","readAsDataURL"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport './Addtext.css'\nimport './Addimage.css'\nimport firebase from 'firebase';\n\nconst storage = firebase.storage()\n\nconst Addimage = () => {\n        const allInputs = {imgUrl: ''}\n        const [selectedFile , setselectedFile] = useState(null);\n        const [imageAsUrl, setImageAsUrl] = useState(allInputs)\n\n        const fileuploadhandler =event=>{\n            setselectedFile(event.target.files[0])\n            const node = document.getElementById('preview');\n            node.innerHTML = \"\";\n             event.stopPropagation();\n             event.preventDefault();\n             console.log(selectedFile)\n             handleFiles(event.target.files[0]);\n        }\n\n        const  onClickHandler = () => {\n            console.log(selectedFile)\n            if(selectedFile === '') {\n                console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\n              }\n              const uploadTask = storage.ref(`/images/${selectedFile.name}`).put(selectedFile)\n              //initiates the firebase side uploading \n              uploadTask.on('state_changed', \n              (snapShot) => {\n                //takes a snap shot of the process as it is happening\n                console.log(snapShot)\n              }, (err) => {\n                //catches the errors\n                console.log(err)\n              }, () => {\n                // gets the functions from storage refences the image storage in firebase by the children\n                // gets the download url then sets the image from firebase as the value for the imgUrl key:\n                storage.ref('images').child(selectedFile.name).getDownloadURL()\n                 .then(fireBaseUrl => {\n                   setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n                 })   \n            \n                })\n    \n        };\n        \n        const handleFiles = file => {\n           \n              const preview = document.getElementById(\"preview\");\n              const img = document.createElement(\"img\");\n              img.classList.add(\"obj\");\n              img.classList.add(\"mt-3\");\n              img.file = file;\n              preview.appendChild(img); // Assuming that \"preview\" is the div output where the content will be displayed.\n              \n              const reader = new FileReader();\n              reader.onload = (function(aImg) { return function(e) { aImg.src = e.target.result; }; })(img);\n              if (file && file.type.match('image.*')) {\n                reader.readAsDataURL(file);\n              }\n             \n            \n          }\n        \n    \n        return (\n            <div className=\"container\">\n           <div className=\"col-md-6\" id=\"parents\">\n              <form method=\"post\" action=\"#\" id=\"#\">\n                 <div className=\"form-group files color\">\n                    <label>Upload Your File </label>\n                    <input type=\"file\" className=\"form-control\" multiple= \"\" onChange={fileuploadhandler}/>\n                </div>\n                    <button type=\"button\" class=\"btn btn-warning btn-block \" onClick={onClickHandler}>Submit</button> \n    \n             </form>\n            <div  id=\"preview\"></div>\n         </div>\n            </div>\n        )\n    \n    }\n    \n \nexport default Addimage;"]},"metadata":{},"sourceType":"module"}