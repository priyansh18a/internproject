{"ast":null,"code":"var _jsxFileName = \"/home/priyanshu/thefeynmanschool.com/src/components/Addimage.js\";\nimport React, { useState } from 'react';\nimport './Addtext.css';\nimport './Addimage.css';\nimport firebase from 'firebase';\nimport { useParams, Link } from 'react-router-dom';\nconst storage = firebase.storage();\n\nconst Addimage = () => {\n  const screenId = useParams().screenId;\n  const [files, setFiles] = useState([]);\n\n  const fileuploadhandler = e => {\n    // document.getElementById(\"parents\").style.display =\"none\";\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newFile = e.target.files[i];\n      newFile[\"id\"] = Math.random();\n      console.log(newFile);\n      handleFiles(newFile); // add an \"id\" property to each File object\n\n      setFiles(prevState => [...prevState, newFile]);\n    }\n  };\n\n  const onUploadSubmission = e => {\n    e.preventDefault(); // prevent page refreshing\n\n    const promises = [];\n    files.forEach(file => {\n      const uploadTask = storage.ref().child(`images/${file.name}`).put(file);\n      promises.push(uploadTask);\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n\n        if (snapshot.state === firebase.storage.TaskState.RUNNING) {\n          console.log(`Progress: ${progress}%`);\n        }\n      }, error => console.log(error.code), async () => {\n        const downloadURL = await uploadTask.snapshot.ref.getDownloadURL(); // do something with the url\n      });\n    });\n    Promise.all(promises).then(() => alert('All files uploaded')).catch(err => console.log(err.code));\n  };\n\n  const handleFiles = file => {\n    const preview = document.getElementById(\"preview\");\n    const img = document.createElement(\"img\");\n    img.classList.add(\"obj\");\n    img.classList.add(\"m-2\");\n    img.file = file;\n    preview.appendChild(img); // Assuming that \"preview\" is the div output where the content will be displayed.\n\n    const reader = new FileReader();\n\n    reader.onload = function (aImg) {\n      return function (e) {\n        aImg.src = e.target.result;\n      };\n    }(img);\n\n    if (file && file.type.match('image.*')) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"btn btn-primary m-3 \",\n    to: `${screenId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 14\n    }\n  }, \"Add New Screen\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    id: \"parents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    action: \"#\",\n    id: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group files color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Upload Your File \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    multiple: true,\n    onChange: fileuploadhandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-warning btn-block \",\n    onClick: onUploadSubmission,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Submit\")))));\n};\n\nexport default Addimage;","map":{"version":3,"sources":["/home/priyanshu/thefeynmanschool.com/src/components/Addimage.js"],"names":["React","useState","firebase","useParams","Link","storage","Addimage","screenId","files","setFiles","fileuploadhandler","e","i","target","length","newFile","Math","random","console","log","handleFiles","prevState","onUploadSubmission","preventDefault","promises","forEach","file","uploadTask","ref","child","name","put","push","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","RUNNING","error","code","downloadURL","getDownloadURL","Promise","all","then","alert","catch","err","preview","document","getElementById","img","createElement","classList","add","appendChild","reader","FileReader","onload","aImg","src","result","type","match","readAsDataURL"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport './Addtext.css'\nimport './Addimage.css'\nimport firebase from 'firebase';\nimport { useParams, Link } from 'react-router-dom';\n\n\nconst storage = firebase.storage()\n\n\n\nconst Addimage = () => {\n        const screenId = useParams().screenId;\n        const [files , setFiles] = useState([]);\n        \n\n        const fileuploadhandler = e => {\n          // document.getElementById(\"parents\").style.display =\"none\";\n          for (let i = 0; i < e.target.files.length; i++) {\n               const newFile = e.target.files[i];\n               newFile[\"id\"] = Math.random();\n               console.log(newFile)\n               handleFiles(newFile)\n            // add an \"id\" property to each File object\n               setFiles(prevState => [...prevState, newFile]);\n             }\n           };\n         \n\n        const onUploadSubmission = e => {\n          e.preventDefault(); // prevent page refreshing\n            const promises = [];\n            files.forEach(file => {\n             const uploadTask = \n              storage.ref().child(`images/${file.name}`).put(file);\n                promises.push(uploadTask);\n                uploadTask.on(\n                   firebase.storage.TaskEvent.STATE_CHANGED,\n                   snapshot => {\n                    const progress = \n                      ((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n                       if (snapshot.state === firebase.storage.TaskState.RUNNING) {\n                        console.log(`Progress: ${progress}%`);\n                       }\n                     },\n                     error => console.log(error.code),\n                     async () => {\n                          const downloadURL = await uploadTask.snapshot.ref.getDownloadURL();\n                        // do something with the url\n                      }\n                     );\n                   });\n               Promise.all(promises)\n                .then(() => alert('All files uploaded'))\n                .catch(err => console.log(err.code));\n         }\n        \n        const handleFiles = file => {\n           \n              const preview = document.getElementById(\"preview\");\n              const img = document.createElement(\"img\");\n              img.classList.add(\"obj\");\n              img.classList.add(\"m-2\");\n              img.file = file;\n              preview.appendChild(img); // Assuming that \"preview\" is the div output where the content will be displayed.\n              \n              const reader = new FileReader();\n              reader.onload = (function(aImg) { return function(e) { aImg.src = e.target.result; }; })(img);\n              if (file && file.type.match('image.*')) {\n                reader.readAsDataURL(file);\n              }\n             \n            \n          }\n\n          \n        \n    \n        return (\n            <div className=\"container\">\n             <Link  className=\"btn btn-primary m-3 \" to={`${screenId}`} >Add New Screen</Link> \n\n             <div  id=\"preview\">\n           <div className=\"col-md-6\" id=\"parents\" >\n              <form method=\"post\" action=\"#\" id=\"#\">\n                 <div className=\"form-group files color\" >\n                    <label>Upload Your File </label>\n                    <input type=\"file\" className=\"form-control\" multiple onChange={fileuploadhandler}/>\n                </div>\n                    <button type=\"button\" className=\"btn btn-warning btn-block \" onClick={onUploadSubmission}>Submit</button> \n    \n             </form>\n             </div>\n         </div>\n            </div>\n        )\n    \n    };\n    \n \nexport default Addimage;"]},"metadata":{},"sourceType":"module"}